No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
/data/uqhmcdou/paralleltest/example_slurmjob.py:51: UserWarning: There are not enough devices to run parallel chains: expected 2 but got 1. Chains will be drawn sequentially. If you are running MCMC in CPU, consider using `numpyro.set_host_device_count(2)` at the beginning of your program. You can double-check how many devices are available in your system using `jax.local_device_count()`.
  sampler = npy.infer.MCMC(npy.infer.NUTS(model=model),
-------------------------------------------------------------------------------
Doing Imports
-------------------------------------------------------------------------------
Doing NumPyro setup
Starting program with 1 cores registering from jax.local_device_count()
-------------------------------------------------------------------------------
Doing MCMC
  0%|          | 0/800 [00:00<?, ?it/s]warmup:   0%|          | 1/800 [00:02<35:15,  2.65s/it, 1 steps of size 2.34e+00. acc. prob=0.00]warmup:  30%|██▉       | 237/800 [00:02<00:04, 121.14it/s, 71 steps of size 5.78e-03. acc. prob=0.77]sample:  58%|█████▊    | 462/800 [00:02<00:01, 266.13it/s, 1 steps of size 9.14e-03. acc. prob=0.95] sample:  82%|████████▏ | 658/800 [00:02<00:00, 416.16it/s, 211 steps of size 9.14e-03. acc. prob=0.95]sample: 100%|██████████| 800/800 [00:03<00:00, 265.10it/s, 295 steps of size 9.14e-03. acc. prob=0.95]
  0%|          | 0/800 [00:00<?, ?it/s]warmup:  30%|██▉       | 239/800 [00:00<00:00, 2382.44it/s, 1 steps of size 8.40e-03. acc. prob=0.77]sample:  60%|█████▉    | 478/800 [00:00<00:00, 2247.67it/s, 231 steps of size 9.17e-03. acc. prob=0.94]sample:  88%|████████▊ | 704/800 [00:00<00:00, 2215.44it/s, 3 steps of size 9.17e-03. acc. prob=0.94]  sample: 100%|██████████| 800/800 [00:00<00:00, 2229.83it/s, 59 steps of size 9.17e-03. acc. prob=0.94]
Done
-------------------------------------------------------------------------------

                mean       std    median      5.0%     95.0%     n_eff     r_hat
         c      1.94      0.25      1.99      1.90      2.08     12.75      1.12
         m      1.00      0.01      1.00      1.00      1.00     12.73      1.12

Number of divergences: 0
-------------------------------------------------------------------------------
